/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.harrys.demo.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class DemoAvroRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DemoAvroRecord\",\"namespace\":\"com.harrys.demo.avro\",\"fields\":[{\"name\":\"jobUUID\",\"type\":\"string\"},{\"name\":\"taskNumber\",\"type\":\"int\"},{\"name\":\"firstValue\",\"type\":\"int\"},{\"name\":\"lastValue\",\"type\":\"int\"},{\"name\":\"chunkSize\",\"type\":\"int\"},{\"name\":\"jobValue\",\"type\":\"int\"},{\"name\":\"value\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence jobUUID;
  @Deprecated public int taskNumber;
  @Deprecated public int firstValue;
  @Deprecated public int lastValue;
  @Deprecated public int chunkSize;
  @Deprecated public int jobValue;
  @Deprecated public int value;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public DemoAvroRecord() {}

  /**
   * All-args constructor.
   */
  public DemoAvroRecord(java.lang.CharSequence jobUUID, java.lang.Integer taskNumber, java.lang.Integer firstValue, java.lang.Integer lastValue, java.lang.Integer chunkSize, java.lang.Integer jobValue, java.lang.Integer value) {
    this.jobUUID = jobUUID;
    this.taskNumber = taskNumber;
    this.firstValue = firstValue;
    this.lastValue = lastValue;
    this.chunkSize = chunkSize;
    this.jobValue = jobValue;
    this.value = value;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return jobUUID;
    case 1: return taskNumber;
    case 2: return firstValue;
    case 3: return lastValue;
    case 4: return chunkSize;
    case 5: return jobValue;
    case 6: return value;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: jobUUID = (java.lang.CharSequence)value$; break;
    case 1: taskNumber = (java.lang.Integer)value$; break;
    case 2: firstValue = (java.lang.Integer)value$; break;
    case 3: lastValue = (java.lang.Integer)value$; break;
    case 4: chunkSize = (java.lang.Integer)value$; break;
    case 5: jobValue = (java.lang.Integer)value$; break;
    case 6: value = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'jobUUID' field.
   */
  public java.lang.CharSequence getJobUUID() {
    return jobUUID;
  }

  /**
   * Sets the value of the 'jobUUID' field.
   * @param value the value to set.
   */
  public void setJobUUID(java.lang.CharSequence value) {
    this.jobUUID = value;
  }

  /**
   * Gets the value of the 'taskNumber' field.
   */
  public java.lang.Integer getTaskNumber() {
    return taskNumber;
  }

  /**
   * Sets the value of the 'taskNumber' field.
   * @param value the value to set.
   */
  public void setTaskNumber(java.lang.Integer value) {
    this.taskNumber = value;
  }

  /**
   * Gets the value of the 'firstValue' field.
   */
  public java.lang.Integer getFirstValue() {
    return firstValue;
  }

  /**
   * Sets the value of the 'firstValue' field.
   * @param value the value to set.
   */
  public void setFirstValue(java.lang.Integer value) {
    this.firstValue = value;
  }

  /**
   * Gets the value of the 'lastValue' field.
   */
  public java.lang.Integer getLastValue() {
    return lastValue;
  }

  /**
   * Sets the value of the 'lastValue' field.
   * @param value the value to set.
   */
  public void setLastValue(java.lang.Integer value) {
    this.lastValue = value;
  }

  /**
   * Gets the value of the 'chunkSize' field.
   */
  public java.lang.Integer getChunkSize() {
    return chunkSize;
  }

  /**
   * Sets the value of the 'chunkSize' field.
   * @param value the value to set.
   */
  public void setChunkSize(java.lang.Integer value) {
    this.chunkSize = value;
  }

  /**
   * Gets the value of the 'jobValue' field.
   */
  public java.lang.Integer getJobValue() {
    return jobValue;
  }

  /**
   * Sets the value of the 'jobValue' field.
   * @param value the value to set.
   */
  public void setJobValue(java.lang.Integer value) {
    this.jobValue = value;
  }

  /**
   * Gets the value of the 'value' field.
   */
  public java.lang.Integer getValue() {
    return value;
  }

  /**
   * Sets the value of the 'value' field.
   * @param value the value to set.
   */
  public void setValue(java.lang.Integer value) {
    this.value = value;
  }

  /** Creates a new DemoAvroRecord RecordBuilder */
  public static com.harrys.demo.avro.DemoAvroRecord.Builder newBuilder() {
    return new com.harrys.demo.avro.DemoAvroRecord.Builder();
  }
  
  /** Creates a new DemoAvroRecord RecordBuilder by copying an existing Builder */
  public static com.harrys.demo.avro.DemoAvroRecord.Builder newBuilder(com.harrys.demo.avro.DemoAvroRecord.Builder other) {
    return new com.harrys.demo.avro.DemoAvroRecord.Builder(other);
  }
  
  /** Creates a new DemoAvroRecord RecordBuilder by copying an existing DemoAvroRecord instance */
  public static com.harrys.demo.avro.DemoAvroRecord.Builder newBuilder(com.harrys.demo.avro.DemoAvroRecord other) {
    return new com.harrys.demo.avro.DemoAvroRecord.Builder(other);
  }
  
  /**
   * RecordBuilder for DemoAvroRecord instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DemoAvroRecord>
    implements org.apache.avro.data.RecordBuilder<DemoAvroRecord> {

    private java.lang.CharSequence jobUUID;
    private int taskNumber;
    private int firstValue;
    private int lastValue;
    private int chunkSize;
    private int jobValue;
    private int value;

    /** Creates a new Builder */
    private Builder() {
      super(com.harrys.demo.avro.DemoAvroRecord.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.harrys.demo.avro.DemoAvroRecord.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.jobUUID)) {
        this.jobUUID = data().deepCopy(fields()[0].schema(), other.jobUUID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.taskNumber)) {
        this.taskNumber = data().deepCopy(fields()[1].schema(), other.taskNumber);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.firstValue)) {
        this.firstValue = data().deepCopy(fields()[2].schema(), other.firstValue);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.lastValue)) {
        this.lastValue = data().deepCopy(fields()[3].schema(), other.lastValue);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.chunkSize)) {
        this.chunkSize = data().deepCopy(fields()[4].schema(), other.chunkSize);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.jobValue)) {
        this.jobValue = data().deepCopy(fields()[5].schema(), other.jobValue);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.value)) {
        this.value = data().deepCopy(fields()[6].schema(), other.value);
        fieldSetFlags()[6] = true;
      }
    }
    
    /** Creates a Builder by copying an existing DemoAvroRecord instance */
    private Builder(com.harrys.demo.avro.DemoAvroRecord other) {
            super(com.harrys.demo.avro.DemoAvroRecord.SCHEMA$);
      if (isValidValue(fields()[0], other.jobUUID)) {
        this.jobUUID = data().deepCopy(fields()[0].schema(), other.jobUUID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.taskNumber)) {
        this.taskNumber = data().deepCopy(fields()[1].schema(), other.taskNumber);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.firstValue)) {
        this.firstValue = data().deepCopy(fields()[2].schema(), other.firstValue);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.lastValue)) {
        this.lastValue = data().deepCopy(fields()[3].schema(), other.lastValue);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.chunkSize)) {
        this.chunkSize = data().deepCopy(fields()[4].schema(), other.chunkSize);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.jobValue)) {
        this.jobValue = data().deepCopy(fields()[5].schema(), other.jobValue);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.value)) {
        this.value = data().deepCopy(fields()[6].schema(), other.value);
        fieldSetFlags()[6] = true;
      }
    }

    /** Gets the value of the 'jobUUID' field */
    public java.lang.CharSequence getJobUUID() {
      return jobUUID;
    }
    
    /** Sets the value of the 'jobUUID' field */
    public com.harrys.demo.avro.DemoAvroRecord.Builder setJobUUID(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.jobUUID = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'jobUUID' field has been set */
    public boolean hasJobUUID() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'jobUUID' field */
    public com.harrys.demo.avro.DemoAvroRecord.Builder clearJobUUID() {
      jobUUID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'taskNumber' field */
    public java.lang.Integer getTaskNumber() {
      return taskNumber;
    }
    
    /** Sets the value of the 'taskNumber' field */
    public com.harrys.demo.avro.DemoAvroRecord.Builder setTaskNumber(int value) {
      validate(fields()[1], value);
      this.taskNumber = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'taskNumber' field has been set */
    public boolean hasTaskNumber() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'taskNumber' field */
    public com.harrys.demo.avro.DemoAvroRecord.Builder clearTaskNumber() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'firstValue' field */
    public java.lang.Integer getFirstValue() {
      return firstValue;
    }
    
    /** Sets the value of the 'firstValue' field */
    public com.harrys.demo.avro.DemoAvroRecord.Builder setFirstValue(int value) {
      validate(fields()[2], value);
      this.firstValue = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'firstValue' field has been set */
    public boolean hasFirstValue() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'firstValue' field */
    public com.harrys.demo.avro.DemoAvroRecord.Builder clearFirstValue() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'lastValue' field */
    public java.lang.Integer getLastValue() {
      return lastValue;
    }
    
    /** Sets the value of the 'lastValue' field */
    public com.harrys.demo.avro.DemoAvroRecord.Builder setLastValue(int value) {
      validate(fields()[3], value);
      this.lastValue = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'lastValue' field has been set */
    public boolean hasLastValue() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'lastValue' field */
    public com.harrys.demo.avro.DemoAvroRecord.Builder clearLastValue() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'chunkSize' field */
    public java.lang.Integer getChunkSize() {
      return chunkSize;
    }
    
    /** Sets the value of the 'chunkSize' field */
    public com.harrys.demo.avro.DemoAvroRecord.Builder setChunkSize(int value) {
      validate(fields()[4], value);
      this.chunkSize = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'chunkSize' field has been set */
    public boolean hasChunkSize() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'chunkSize' field */
    public com.harrys.demo.avro.DemoAvroRecord.Builder clearChunkSize() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'jobValue' field */
    public java.lang.Integer getJobValue() {
      return jobValue;
    }
    
    /** Sets the value of the 'jobValue' field */
    public com.harrys.demo.avro.DemoAvroRecord.Builder setJobValue(int value) {
      validate(fields()[5], value);
      this.jobValue = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'jobValue' field has been set */
    public boolean hasJobValue() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'jobValue' field */
    public com.harrys.demo.avro.DemoAvroRecord.Builder clearJobValue() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'value' field */
    public java.lang.Integer getValue() {
      return value;
    }
    
    /** Sets the value of the 'value' field */
    public com.harrys.demo.avro.DemoAvroRecord.Builder setValue(int value) {
      validate(fields()[6], value);
      this.value = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'value' field has been set */
    public boolean hasValue() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'value' field */
    public com.harrys.demo.avro.DemoAvroRecord.Builder clearValue() {
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public DemoAvroRecord build() {
      try {
        DemoAvroRecord record = new DemoAvroRecord();
        record.jobUUID = fieldSetFlags()[0] ? this.jobUUID : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.taskNumber = fieldSetFlags()[1] ? this.taskNumber : (java.lang.Integer) defaultValue(fields()[1]);
        record.firstValue = fieldSetFlags()[2] ? this.firstValue : (java.lang.Integer) defaultValue(fields()[2]);
        record.lastValue = fieldSetFlags()[3] ? this.lastValue : (java.lang.Integer) defaultValue(fields()[3]);
        record.chunkSize = fieldSetFlags()[4] ? this.chunkSize : (java.lang.Integer) defaultValue(fields()[4]);
        record.jobValue = fieldSetFlags()[5] ? this.jobValue : (java.lang.Integer) defaultValue(fields()[5]);
        record.value = fieldSetFlags()[6] ? this.value : (java.lang.Integer) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
